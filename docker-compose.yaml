version: '3.8'

services:
  db:
    image: postgres:12.2-alpine
    container_name: "postgres12.2"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5

    networks:
      - fullstack
    volumes:
      - database_postgres:/var/lib/postgresql/data

  api:
    build: .
    image: todo-app:1.0
    container_name: "todo-api"
    environment:
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_DB: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      SSL_MODE: ${SSL_MODE}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - fullstack

  migrate:
    image: migrate/migrate:v4.15.2
    profiles: [ "tools" ]
    volumes:
      - ./db/migrations:/migrations
    entrypoint: [ "migrate", "-path", "/migrations", "-database", "postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable" ]
    command: [ "up" ]
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

volumes:
  database_postgres:


networks:
  fullstack:
    driver: bridge
